function Base.show(io::IO, obj::RBE)
    rcoef = coefnames(obj.rmodel);
    println(io, "Bioequivalence Linear Mixed Effect Model")
    println(io, "")
    println(io, "-2REML: $(round(obj.reml, sigdigits=6))    REML: $(round(-obj.reml/2, sigdigits=6))")
    println(io, "")
    println(io, "Fixed effect:")
    println(io, obj.fixed)
    println(io, "Intra-individual variation:")
    println(io, rcoef[1], "  ", round(obj.θ[1], sigdigits=6), "   CVᵂ: ", round(geocv(obj.θ[1]), sigdigits=6))
    println(io, rcoef[2], "  ", round(obj.θ[2], sigdigits=6), "   CVᵂ: ", round(geocv(obj.θ[2]), sigdigits=6))
    println(io, "")
    println(io, "Inter-individual variation:")
    println(io, rcoef[1], "  ", round(obj.θ[3], sigdigits=6))
    println(io, rcoef[2], "  ", round(obj.θ[4], sigdigits=6))
    println(io,   "Cov:", "  ", round(sqrt(obj.θ[4]*obj.θ[3])*obj.θ[5], sigdigits=6))
    println(io, "")
    println(io, "Confidence intervals(90%):")
    ci = confint(obj, 0.1, expci = true, inv = false)
    println(io, rcoef[1], " / ", rcoef[2])
    println(io, round(ci[end][1]*100, digits=4), " - ", round(ci[end][2]*100, digits=4), " (%)")
    ci = confint(obj, 0.1, expci = true, inv = true)
    println(io, rcoef[2], " / ", rcoef[1])
    print(io, round(ci[end][1]*100, digits=4), " - ", round(ci[end][2]*100, digits=4), " (%)")
end #─┼┴┬│
